services:
    db:
        image: pastakhov/mysql:5.7
        restart: unless-stopped
        environment:
            - MYSQL_ROOT_HOST=${EUCR_MYSQL_ROOT_HOST}
            - MYSQL_ROOT_PASSWORD=${EUCR_MYSQL_ROOT_PASSWORD}
        volumes:
            - ${EUCR_MYSQL_DATA}:/var/lib/mysql
        healthcheck:
            test: "/usr/bin/mysql --user=root --password=${EUCR_MYSQL_ROOT_PASSWORD} --execute \"SHOW DATABASES;\""
            interval: 10s
            timeout: 20s
            retries: 10

    nginx-proxy:
        image: nginxproxy/nginx-proxy:1.6-alpine
        ports:
          - 80:80
          - 443:443
        volumes:
          - /var/run/docker.sock:/tmp/docker.sock:ro
          - ./nginx.conf:/etc/nginx/conf.d/my_proxy.conf:ro
          - ${EUCR_NGINXP_CERTS}:/etc/nginx/certs:ro

    autoheal:
        restart: always
        image: willfarrell/autoheal
        environment:
          - AUTOHEAL_CONTAINER_LABEL=all
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock

    mediawiki:
        build: 
            context: ./mediawiki
            additional_contexts:
                - shubara=shubara/
            dockerfile: Dockerfile
        restart: unless-stopped
        tty: true
        deploy:
          mode: replicated
          replicas: 2 # just to be safe, so if one suffers a "brown out", other one still works
        depends_on:
            db:
              condition: service_healthy
            elasticsearch:
              condition: service_healthy
            memcached:
              condition: service_started
            parsoid:
              condition: service_started
            restbase:
              condition: service_started
        volumes:
            - ${EUCR_MW_UPLOADS}:/var/www/html/w/images
        healthcheck:
            test: curl --fail http://mediawiki/wiki/Special:BlankPage || exit 1
            interval: 10s
            retries: 5
            start_period: 1s
            timeout: 10s
        environment:
            # NGINX Proxy
            - VIRTUAL_HOST=${EUCR_MW_NGINXP_VIRTHOST}
            - VIRTUAL_PORT=80
            - CERT_NAME=sitecert
            # MediaWiki
            - MW_SECRETKEY=${EUCR_MW_SECRETKEY}
            - MW_UPGRADEKEY=${EUCR_MW_UPGRADEKEY}
            - MW_SITE_SERVER=${EUCR_MW_SERVER}
            - MW_ENABLE_UPLOADS=1
            - MW_DB_NAME=${EUCR_MW_DB_NAME}
            - MW_DB_USER=${EUCR_MW_DB_USER}
            - MW_DB_PASS=${EUCR_MW_DB_PASS}
            - MW_AUTOUPDATE=true
            - MW_PROXY_SERVERS=nginx
            - MW_MEMCACHED_SERVERS=memcached:11211
            - MW_CIRRUS_SEARCH_SERVERS=elasticsearch
            - MW_REST_DOMAIN=mediawiki
            - MW_REST_PARSOID_URL=http://parsoid:8000
            - MW_REST_RESTBASE_URL=http://restbase:7231
            - MW_REST_RESTBASE_PROXY_PATH=/api/rest_
            - PHP_LOG_ERRORS=On
            - PHP_ERROR_REPORTING=E_ALL #Production Value: E_ALL & ~E_DEPRECATED & ~E_STRICT
            - TURNSTILE_SITEKEY=${EUCR_TURNSTILE_SITEKEY}
            - TURNSTILE_SECRETKEY=${EUCR_TURNSTILE_SECRETKEY}
            - USE_TURNSTILE=${EUCR_USE_TURNSTILE}
            - MAILJET_APIKEY=${EUCR_MAILJET_APIKEY}
            - MAILJET_SECRETKEY=${EUCR_MAILJET_SECRETKEY}
            - GOOGLE_LOGIN_APPID=${EUCR_GOOGLE_LOGIN_APPID}
            - GOOGLE_LOGIN_SECRET=${EUCR_GOOGLE_LOGIN_SECRET}
            - DISCORD_WEBHOOK_URL=${EUCR_DISCORD_WEBHOOK_URL}

    memcached:
        image: memcached
        restart: unless-stopped

    parsoid:
        image: pastakhov/parsoid:0.7.1
        restart: unless-stopped
        environment:
            - PARSOID_NUM_WORKERS=0
            - PARSOID_DOMAIN_mediawiki=http://mediawiki/w/api.php

    restbase:
        image: pastakhov/restbase:0.16.9
        restart: unless-stopped
        environment:
            - RB_CONF_NUM_WORKERS=0
            - RB_CONF_DOMAIN_mediawiki=http://mediawiki/w/api.php
            - RB_CONF_PARSOID_HOST=http://parsoid:8000
            - RB_CONF_BASE_URI_TEMPLATE=http://{domain}/api/rest_v1
            - RB_CONF_API_URI_TEMPLATE=http://{domain}/w/api.php
            - RB_CONF_LOGGING_LEVEL=info #trace
            - RB_CONF_PDF_URI=http://pdf:3000

    elasticsearch:
        image: docker-registry.wikimedia.org/repos/search-platform/cirrussearch-elasticsearch-image:v7.10.2-5 
        environment:
            - discovery.type=single-node
        restart: unless-stopped
        volumes:
            - esdata:/usr/share/elasticsearch/data
        healthcheck:
            test: curl -s http://localhost:9200 >/dev/null || exit 1
            interval: 30s
            timeout: 10s
            retries: 50

    pdf:
        image: msokk/electron-render-service
        restart: unless-stopped
        environment:
            RENDERER_ACCESS_KEY: secret

            # Reenable if a dedicated tile server will be needed and/or possible
            # tileserver:
            #     image: overv/openstreetmap-tile-server
            #     volumes: ${EUCR_TILESERVER_DATA}:/data/database
            #     command: "run"

volumes:
  esdata:
    driver: local
